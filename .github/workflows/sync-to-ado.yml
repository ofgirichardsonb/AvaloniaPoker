name: Sync to Azure DevOps

env:
  ACTIONS_STEP_DEBUG: true

on:
  push:
    branches:
      - '**'


jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Create branch in ADO if it doesn't exist
        uses: azure/cli@v2
        with:
          inlineScript: |
            set -x
            az devops configure --defaults organization=https://dev.azure.com/ofgi project="Architecture Lab"
            pat="${{ secrets.AZURE_DEVOPS_EXT_PAT }}"
            echo $pat | az devops login
            branchName="${{ github.ref_name }}"
            branchExists="$(az repos ref list -r AvaloniaPoker --filter heads/$branchName | jq -r '.[].objectId')"
            echo "here"
            if [ -z $branchExists ]; then
              echo -n "Branch $branchName does not exist, creating it..."
              objectId="$(az repos ref list -r AvaloniaPoker --filter heads/main | jq -r '.[] | .objectId')"
              if [ -z $objectId]; then
                echo "No main branch found!"
                exit 1
              fi
              az repos ref create --name "heads/$branchName" -r AvaloniaPoker --object-id $objectId
              echo "created"
            fi

      - name: Add Azure DevOps remote
        run: |
          git remote add ado "https://${{ secrets.AZURE_DEVOPS_EXT_PAT }}@dev.azure.com/ofgi/Architecture%20Lab/_git/AvaloniaPoker"
          git fetch ado

      - name: Debug Git Status
        run: |
          echo "Current branch: $(git branch --show-current)"
          echo "Remote info:"
          git remote -v
          echo "Git status:"
          git status
          echo "Git log:"
          git log --oneline -n 5
          echo "Remote refs:"
          git ls-remote ado
          
      - name: Use Azure DevOps API for Push
        run: |
          # Get the current commit SHA
          CURRENT_SHA=$(git rev-parse HEAD)

          # Get the ADO commit SHA
          ADO_SHA=$(git ls-remote ado refs/heads/development | cut -f1)

          # Create JSON payload for API request
          json_payload=$(cat <<EOF
          {
            "refUpdates": [
              {
                "name": "refs/heads/development",
                "oldObjectId": "$ADO_SHA",
                "newObjectId": "$CURRENT_SHA"
              }
            ],
            "commits": []
          }
          EOF
          )

          # Debug the payload
          echo "JSON Payload:"
          echo "$json_payload"

          # Make API request
          curl -X POST \
            -H "Authorization: Basic ${{ secrets.ADO_PAT_BASE64 }}" \
            -H "Content-Type: application/json" \
            -d "$json_payload" \
            "https://dev.azure.com/ofgi/Architecture%20Lab/_apis/git/repositories/AvaloniaPoker/pushes?api-version=6.0"

