name: Sync to Azure DevOps

env:
  ACTIONS_STEP_DEBUG: true

on:
  push:
    branches:
      - '**'


jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Sync to Azure DevOps
        run: |
          # Set variables
          PAT="${{ secrets.AZURE_DEVOPS_EXT_PAT }}"
          ORG="ofgi"
          PROJECT="Architecture Lab"
          REPO="AvaloniaPoker"
          BRANCH="${{ github.ref_name }}"
          SHA="${{ github.sha }}"

          echo "Branch: $BRANCH"
          echo "SHA: $SHA"


          # URL encode the project name
          PROJECT_ENC=$(echo "$PROJECT" | sed 's/ /%20/g')

          # API base URL
          API_URL="https://dev.azure.com/$ORG/$PROJECT_ENC/_apis/git/repositories/$REPO"

          echo "API URL: $API_URL"

          # First, we need to check out the full repository with all commits
          echo "Setting up Git repository..."
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

          # Make sure we have the full history
          git fetch --unshallow || true

          # Add Azure DevOps as a remote
          git remote add ado "https://$PAT@dev.azure.com/$ORG/$PROJECT_ENC/_git/$REPO"

          # Fetch from Azure DevOps to see what's there
          git fetch ado || true

          # Print remotes and branches for debugging
          git remote -v
          git branch -a

          # Try to find a branch to base our new branch on
          echo "Looking for main branch in Azure DevOps..."
          git ls-remote ado refs/heads/main
          if [ $? -eq 0 ]; then
            BASE_BRANCH="main"
          else
            echo "Looking for master branch in Azure DevOps..."
            git ls-remote ado refs/heads/master
            if [ $? -eq 0 ]; then
              BASE_BRANCH="master"
            else
              echo "No main or master branch found in Azure DevOps, using current SHA as starting point"
              BASE_BRANCH=""
            fi
          fi

          # Create and push the branch
          echo "Creating and pushing branch $BRANCH to Azure DevOps..."

          if [ -n "$BASE_BRANCH" ]; then
            # If we found a base branch, create our branch from it
            git checkout -b temp-branch "ado/$BASE_BRANCH"

            # Cherry-pick or merge the commits we want to push
            # (this is simplified - you might need a more complex strategy)
            git cherry-pick $SHA || true

            # Force push to the target branch
            git push ado "temp-branch:refs/heads/$BRANCH" --force
          else
            # If no base branch, just push the current branch
            git push ado "HEAD:refs/heads/$BRANCH" --force
          fi

          echo "Push complete."
