name: Sync to Azure DevOps

env:
  ACTIONS_STEP_DEBUG: true

on:
  push:
    branches:
      - '**'


jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Sync to Azure DevOps
        run: |
          # Set variables
          PAT="${{ secrets.AZURE_DEVOPS_EXT_PAT }}"
          ORG="ofgi"
          PROJECT="Architecture Lab"
          REPO="AvaloniaPoker"
          BRANCH="${{ github.ref_name }}"
          SHA="${{ github.sha }}"

          echo "Branch: $BRANCH"
          echo "SHA: $SHA"

          # URL encode the project name
          PROJECT_ENC=$(echo -n "$PROJECT" | perl -MURI::Escape -ne 'print uri_escape($_)')

          # API base URL
          API_URL="https://dev.azure.com/$ORG/$PROJECT_ENC/_apis/git/repositories/$REPO"

          # Authorization header with base64 encoded PAT
          AUTH_HEADER="Authorization: Basic $(echo -n ":$PAT" | base64)"

          # Check if branch exists
          echo "Checking if branch exists..."
          RESPONSE=$(curl -s -H "$AUTH_HEADER" \
            "$API_URL/refs?filter=heads/$BRANCH&api-version=6.0")

          echo "Response: $RESPONSE"

          # If branch doesn't exist, create it
          if echo $RESPONSE | grep -q '"count":0'; then
            echo "Branch doesn't exist, creating it..."

            # Create branch reference using the refs API
            CREATE_JSON="[{\"name\":\"refs/heads/$BRANCH\",\"newObjectId\":\"$SHA\",\"oldObjectId\":\"0000000000000000000000000000000000000000\"}]"

            echo "Create JSON: $CREATE_JSON"

            CREATE_RESPONSE=$(curl -s -X POST -H "$AUTH_HEADER" \
              -H "Content-Type: application/json" \
              -d "$CREATE_JSON" \
              "$API_URL/refs?api-version=6.0")

            echo "Create response: $CREATE_RESPONSE"

            # Check for success
            if echo $CREATE_RESPONSE | grep -q "$SHA"; then
              echo "Branch created successfully!"
            else
              echo "Branch creation failed!"
              exit 1
            fi

          # If branch exists, update it
          else
            echo "Branch exists, updating it..."
            OLD_SHA=$(echo $RESPONSE | grep -o '"objectId":"[^"]*"' | head -1 | cut -d'"' -f4)

            # Update branch reference using the refs API
            UPDATE_JSON="[{\"name\":\"refs/heads/$BRANCH\",\"newObjectId\":\"$SHA\",\"oldObjectId\":\"$OLD_SHA\"}]"

            echo "Update JSON: $UPDATE_JSON" 

            UPDATE_RESPONSE=$(curl -s -X POST -H "$AUTH_HEADER" \
              -H "Content-Type: application/json" \
              -d "$UPDATE_JSON" \
              "$API_URL/refs?api-version=6.0")

            echo "Update response: $UPDATE_RESPONSE"

            # Check for success
            if echo $UPDATE_RESPONSE | grep -q "$SHA"; then
              echo "Branch updated successfully!"
            else
              echo "Branch update failed!"
              exit 1
            fi
          fi
